"""fitness plans

Revision ID: a2a3f902512c
Revises: bc692980d7bb
Create Date: 2023-07-20 09:25:44.024798

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "a2a3f902512c"
down_revision = "bc692980d7bb"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "fitness_plans",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "name_translations", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column(
            "description_translations",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.Column(
            "experience_level",
            postgresql.ENUM(name="experiencelevel", create_type=False),
            nullable=False,
        ),
        sa.Column("fitness_coach_id", sa.Uuid(), nullable=True),
        sa.Column("order_id", sa.Uuid(), nullable=False),
        sa.Column("is_released", sa.Boolean(), nullable=False),
        sa.Column("number_of_workouts_per_week", sa.Integer(), nullable=False),
        sa.Column(
            "focus",
            postgresql.ENUM(name="focus", create_type=False),
            nullable=True,
        ),
        sa.Column(
            "target_sex", postgresql.ENUM(name="sex", create_type=False), nullable=True
        ),
        sa.Column("min_age", sa.Integer(), nullable=True),
        sa.Column("max_age", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "min_age >= 0 AND min_age <= max_age",
            name="fitness_plan_age_constraints",
        ),
        sa.ForeignKeyConstraint(
            ["fitness_coach_id"], ["fitness_coaches.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(["order_id"], ["orders.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_fitness_plans_fitness_coach_id"),
        "fitness_plans",
        ["fitness_coach_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_fitness_plans_fitness_coach_id"), table_name="fitness_plans")
    op.drop_table("fitness_plans")
    # ### end Alembic commands ###
